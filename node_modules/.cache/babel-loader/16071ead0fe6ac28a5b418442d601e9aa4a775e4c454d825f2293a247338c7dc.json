{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/ChatApp/Voli-Chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Paper, Button, TextField, List, ListItem, ListItemText, Container, Switch, Box, Drawer } from '@mui/material';\nimport io from 'socket.io-client';\nimport VideoCall from \"./VideoCall\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton, Typography, Grid } from '@material-ui/core';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n    // 100% of viewport height\n    overflow: 'hidden',\n    background: \"black\"\n  },\n  appBar: {\n    backgroundColor: '#333',\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  title: {\n    flexGrow: 1\n  },\n  centerIcons: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: theme.spacing(2)\n  },\n  videoContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    // height: 'calc(100vh - 64px)',\n    width: '100%' // Make it cover the full width\n  },\n\n  video: {\n    width: '100%',\n    height: '100%'\n  },\n  drawer: {\n    width: '300px'\n  },\n  drawerPaper: {\n    padding: \"15px\",\n    width: '350px'\n  },\n  drawerList: {\n    padding: theme.spacing(2)\n  },\n  commentInputRow: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(2)\n  }\n}));\nfunction App() {\n  _s();\n  const classes = useStyles();\n  const [showMessages, setShowMessages] = useState(false);\n  const [showParticipants, setShowParticipants] = useState(false);\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [roomId, setRoomId] = useState('Tellignet');\n  const [username, setUsername] = useState('');\n  const [participants, setParticipants] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [commentInput, setCommentInput] = useState('');\n  const [isAudioMuted, setIsAudioMinuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(true);\n  const [hideField, setHideField] = useState(false);\n  const [stream, setStream] = useState(null);\n  const socket = io('http://localhost:3001'); // Replace with your server address\n\n  useEffect(() => {\n    const getMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setStream(stream);\n        localVideoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n      }\n    };\n    getMedia();\n    return () => {\n      // Clean up logic if needed\n    };\n  }, []);\n  const joinRoom = () => {\n    setHideField(true);\n    socket.emit('join-room', roomId, username);\n  };\n  const dropCall = () => {\n    socket.disconnect();\n  };\n  const toggleAudio = () => {\n    socket.emit('toggle-audio', roomId);\n    setIsAudioMinuted(!isAudioMuted);\n  };\n  const toggleVideo = () => {\n    socket.emit('toggle-video', roomId);\n    const videoTracks = stream.getVideoTracks();\n    videoTracks.forEach(track => track.enabled = !isVideoMuted);\n    setIsVideoMuted(!isVideoMuted);\n  };\n  const sendComment = () => {\n    socket.emit('send-comment', roomId, commentInput, username);\n    setCommentInput('');\n  };\n  socket.on('user-joined', user => {\n    // Handle user joined\n    console.log(`${user} joined the call`);\n  });\n  socket.on('user-left', user => {\n    // Handle user left\n    console.log(`${user} left the call`);\n  });\n  socket.on('update-participants', newParticipants => {\n    setParticipants(newParticipants);\n  });\n  socket.on('toggle-audio', userId => {\n    // Handle toggle audio\n    console.log(`${userId} toggled audio`);\n  });\n  socket.on('toggle-video', userId => {\n    // Handle toggle video\n    console.log(`${userId} toggled video`);\n  });\n  socket.on('receive-comment', data => {\n    console.log('✌️data --->', data);\n    setComments(prevComments => [...prevComments, data]);\n  });\n  const toggleMessages = () => {\n    setShowMessages(!showMessages);\n  };\n  const toggleParticipants = () => {\n    setShowParticipants(!showParticipants);\n  };\n  return /*#__PURE__*/_jsxDEV(VideoCall, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this)\n  // <>\n  //   {hideField == \"\" ? (\n  //     <div style={{\n  //       display: \"flex\",\n  //       justifyContent: \"center\",\n  //       paddingTop: \"18rem\"\n  //     }}>\n  //       {/* <TextField\n  //       sx={{ margin: \"10px\" }}\n  //       label=\"Room ID\"\n  //       variant=\"outlined\"\n  //       value={roomId}\n  //       onChange={(e) => setRoomId(e.target.value)}\n  //     /> */}\n  //       {hideField != \"\" ? (\n  //         <p style={{ margin: \"10px\", fontSize: \"20px\", color: \"green\" }}>\n\n  //           {username}  has joined the call\n  //         </p>\n\n  //       ) : (\n  //         <>\n  //           <TextField\n  //             sx={{}}\n  //             label=\"Username\"\n  //             variant=\"outlined\"\n  //             value={username}\n  //             onChange={(e) => setUsername(e.target.value)}\n  //           />\n  //           <Button sx={{ padding: \"15px\" }} variant=\"contained\" color=\"primary\" onClick={joinRoom}>\n  //             Join Call\n  //           </Button>\n  //         </>\n  //       )}\n  //       {/* <Button    sx={{margin:\"10px\", padding:\"10px\"}}variant=\"contained\" color=\"secondary\" onClick={dropCall}>\n  //       Drop Call\n  //     </Button> */}\n  //     </div>\n  //   ) : (\n\n  //     <div className={classes.root}>\n  //       <AppBar position=\"static\" className={classes.appBar}>\n  //         <Toolbar>\n  //           <Typography variant=\"h6\" className={classes.title}>\n  //             Meet At Voli\n  //           </Typography>\n  //           <div className={classes.centerIcons}>\n  //             <IconButton color=\"inherit\" onClick={toggleAudio} className={classes.iconButton}>\n  //               {isAudioMuted ? <MicOffIcon /> : <MicIcon />}\n  //             </IconButton>\n  //             <IconButton color=\"inherit\" onClick={toggleVideo} className={classes.iconButton}>\n  //               {isVideoMuted ? <VideocamOffIcon /> : <VideocamIcon />}\n  //             </IconButton>\n  //             <IconButton color=\"inherit\" onClick={toggleMessages} className={classes.iconButton}>\n  //               <ChatIcon />\n  //             </IconButton>\n  //             <IconButton color=\"inherit\" onClick={toggleParticipants} className={classes.iconButton}>\n  //               <PeopleIcon />\n  //             </IconButton>\n  //           </div>\n  //         </Toolbar>\n  //       </AppBar>\n\n  //       <Container className={classes.videoContainer}>\n\n  //         <video ref={localVideoRef} autoPlay muted={isAudioMuted} className={classes.video} playsInline ></video>\n  //         <video ref={remoteVideoRef} autoPlay className={classes.video} playsInline ></video>\n\n  //       </Container>\n\n  //       <Drawer\n  //         anchor=\"right\"\n  //         open={showMessages}\n  //         onClose={toggleMessages}\n  //         classes={{ paper: classes.drawerPaper }}\n  //       >\n  //         <List className={classes.drawerList}>\n  //           <div className={classes.commentsContainer}>\n  //             <Typography variant=\"h6\">Comments</Typography>\n  //             <List>\n  //               {comments.map((comment, index) => (\n  //                 <ListItem key={index}>\n  //                   <ListItemText primary={`${comment.username}: ${comment.comment}`} />\n  //                 </ListItem>\n  //               ))}\n  //             </List>\n  //             <div className={classes.commentInputRow}>\n  //               <TextField\n  //                 label=\"Add a comment\"\n  //                 variant=\"outlined\"\n  //                 fullWidth\n  //                 value={commentInput}\n  //                 onChange={(e) => setCommentInput(e.target.value)}\n  //                 className={classes.commentInput}\n  //               />\n  //               <Button variant=\"contained\" color=\"primary\" onClick={sendComment} sx={{ padding: \"15px\" }}>\n  //                 Send\n  //               </Button>\n  //             </div>\n  //           </div>\n  //         </List>\n  //       </Drawer>\n\n  //       <Drawer\n  //         anchor=\"right\"\n  //         open={showParticipants}\n  //         onClose={toggleParticipants}\n  //         classes={{ paper: classes.drawerPaper }}\n  //       >\n  //         <Typography variant=\"h6\">Participants</Typography>\n  //         <List className={classes.drawerList}>\n  //           {participants.map((participant, index) => (\n  //             <ListItem key={index}>\n  //               <ListItemText primary={participant} />\n  //             </ListItem>\n  //           ))}\n  //         </List>\n  //       </Drawer>\n  //     </div>\n  //   )}\n\n  // </>\n  ;\n}\n_s(App, \"PWO+ZzSxk9KRpcULqAqaocrdlxk=\", false, function () {\n  return [useStyles];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Paper","Button","TextField","List","ListItem","ListItemText","Container","Switch","Box","Drawer","io","VideoCall","makeStyles","AppBar","Toolbar","IconButton","Typography","Grid","VideocamIcon","MicIcon","MicOffIcon","VideocamOffIcon","PeopleIcon","ChatIcon","jsxDEV","_jsxDEV","useStyles","theme","root","flexGrow","height","overflow","background","appBar","backgroundColor","display","justifyContent","title","centerIcons","alignItems","iconButton","margin","spacing","videoContainer","width","video","drawer","drawerPaper","padding","drawerList","commentInputRow","marginTop","App","_s","classes","showMessages","setShowMessages","showParticipants","setShowParticipants","localVideoRef","remoteVideoRef","roomId","setRoomId","username","setUsername","participants","setParticipants","comments","setComments","commentInput","setCommentInput","isAudioMuted","setIsAudioMinuted","isVideoMuted","setIsVideoMuted","hideField","setHideField","stream","setStream","socket","getMedia","navigator","mediaDevices","getUserMedia","audio","current","srcObject","error","console","joinRoom","emit","dropCall","disconnect","toggleAudio","toggleVideo","videoTracks","getVideoTracks","forEach","track","enabled","sendComment","on","user","log","newParticipants","userId","data","prevComments","toggleMessages","toggleParticipants","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/ChatApp/Voli-Chat/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Paper,\n  Button,\n  TextField,\n  List,\n  ListItem,\n  ListItemText,\n  Container,\n  Switch,\n  Box,\n  Drawer\n} from '@mui/material';\nimport io from 'socket.io-client';\n\nimport VideoCall from \"./VideoCall\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton, Typography, Grid } from '@material-ui/core';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport MicIcon from '@material-ui/icons/Mic';\nimport MicOffIcon from '@material-ui/icons/MicOff';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport PeopleIcon from '@material-ui/icons/People';\nimport ChatIcon from '@material-ui/icons/Chat';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh', // 100% of viewport height\n    overflow: 'hidden',\n    background: \"black\"\n  },\n  appBar: {\n    backgroundColor: '#333',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  centerIcons: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: theme.spacing(2),\n  },\n  videoContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    // height: 'calc(100vh - 64px)',\n    width: '100%', // Make it cover the full width\n\n\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n  },\n  drawer: {\n    width: '300px',\n  },\n  drawerPaper: {\n    padding: \"15px\",\n    width: '350px',\n  },\n  drawerList: {\n    padding: theme.spacing(2),\n  },\n  commentInputRow: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(2),\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n\n  const [showMessages, setShowMessages] = useState(false);\n  const [showParticipants, setShowParticipants] = useState(false);\n\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n  const [roomId, setRoomId] = useState('Tellignet');\n  const [username, setUsername] = useState('');\n  const [participants, setParticipants] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [commentInput, setCommentInput] = useState('');\n  const [isAudioMuted, setIsAudioMinuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(true);\n  const [hideField, setHideField] = useState(false)\n  const [stream, setStream] = useState(null);\n  const socket = io('http://localhost:3001'); // Replace with your server address\n\n  useEffect(() => {\n    const getMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        setStream(stream);\n        localVideoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n      }\n    };\n\n    getMedia();\n\n    return () => {\n      // Clean up logic if needed\n    };\n  }, []);\n\n  const joinRoom = () => {\n    setHideField(true)\n    socket.emit('join-room', roomId, username);\n  };\n\n  const dropCall = () => {\n    socket.disconnect();\n  };\n\n  const toggleAudio = () => {\n    socket.emit('toggle-audio', roomId);\n    setIsAudioMinuted(!isAudioMuted);\n  };\n\n  const toggleVideo = () => {\n    socket.emit('toggle-video', roomId);\n    const videoTracks = stream.getVideoTracks();\n    videoTracks.forEach((track) => (track.enabled = !isVideoMuted));\n    setIsVideoMuted(!isVideoMuted);\n  };\n\n  const sendComment = () => {\n    socket.emit('send-comment', roomId, commentInput, username);\n    setCommentInput('');\n  };\n\n  socket.on('user-joined', (user) => {\n    // Handle user joined\n    console.log(`${user} joined the call`);\n  });\n\n  socket.on('user-left', (user) => {\n    // Handle user left\n    console.log(`${user} left the call`);\n  });\n\n  socket.on('update-participants', (newParticipants) => {\n    setParticipants(newParticipants);\n  });\n\n  socket.on('toggle-audio', (userId) => {\n    // Handle toggle audio\n    console.log(`${userId} toggled audio`);\n  });\n\n  socket.on('toggle-video', (userId) => {\n    // Handle toggle video\n    console.log(`${userId} toggled video`);\n  });\n\n  socket.on('receive-comment', (data) => {\n    console.log('✌️data --->', data);\n    setComments((prevComments) => [...prevComments, data]);\n  });\n\n\n  const toggleMessages = () => {\n    setShowMessages(!showMessages);\n  };\n\n  const toggleParticipants = () => {\n    setShowParticipants(!showParticipants);\n  };\n\n  return (\n\n    <VideoCall/>\n    // <>\n    //   {hideField == \"\" ? (\n    //     <div style={{\n    //       display: \"flex\",\n    //       justifyContent: \"center\",\n    //       paddingTop: \"18rem\"\n    //     }}>\n    //       {/* <TextField\n    //       sx={{ margin: \"10px\" }}\n    //       label=\"Room ID\"\n    //       variant=\"outlined\"\n    //       value={roomId}\n    //       onChange={(e) => setRoomId(e.target.value)}\n    //     /> */}\n    //       {hideField != \"\" ? (\n    //         <p style={{ margin: \"10px\", fontSize: \"20px\", color: \"green\" }}>\n\n    //           {username}  has joined the call\n    //         </p>\n\n    //       ) : (\n    //         <>\n    //           <TextField\n    //             sx={{}}\n    //             label=\"Username\"\n    //             variant=\"outlined\"\n    //             value={username}\n    //             onChange={(e) => setUsername(e.target.value)}\n    //           />\n    //           <Button sx={{ padding: \"15px\" }} variant=\"contained\" color=\"primary\" onClick={joinRoom}>\n    //             Join Call\n    //           </Button>\n    //         </>\n    //       )}\n    //       {/* <Button    sx={{margin:\"10px\", padding:\"10px\"}}variant=\"contained\" color=\"secondary\" onClick={dropCall}>\n    //       Drop Call\n    //     </Button> */}\n    //     </div>\n    //   ) : (\n\n    //     <div className={classes.root}>\n    //       <AppBar position=\"static\" className={classes.appBar}>\n    //         <Toolbar>\n    //           <Typography variant=\"h6\" className={classes.title}>\n    //             Meet At Voli\n    //           </Typography>\n    //           <div className={classes.centerIcons}>\n    //             <IconButton color=\"inherit\" onClick={toggleAudio} className={classes.iconButton}>\n    //               {isAudioMuted ? <MicOffIcon /> : <MicIcon />}\n    //             </IconButton>\n    //             <IconButton color=\"inherit\" onClick={toggleVideo} className={classes.iconButton}>\n    //               {isVideoMuted ? <VideocamOffIcon /> : <VideocamIcon />}\n    //             </IconButton>\n    //             <IconButton color=\"inherit\" onClick={toggleMessages} className={classes.iconButton}>\n    //               <ChatIcon />\n    //             </IconButton>\n    //             <IconButton color=\"inherit\" onClick={toggleParticipants} className={classes.iconButton}>\n    //               <PeopleIcon />\n    //             </IconButton>\n    //           </div>\n    //         </Toolbar>\n    //       </AppBar>\n\n    //       <Container className={classes.videoContainer}>\n\n    //         <video ref={localVideoRef} autoPlay muted={isAudioMuted} className={classes.video} playsInline ></video>\n    //         <video ref={remoteVideoRef} autoPlay className={classes.video} playsInline ></video>\n\n    //       </Container>\n\n    //       <Drawer\n    //         anchor=\"right\"\n    //         open={showMessages}\n    //         onClose={toggleMessages}\n    //         classes={{ paper: classes.drawerPaper }}\n    //       >\n    //         <List className={classes.drawerList}>\n    //           <div className={classes.commentsContainer}>\n    //             <Typography variant=\"h6\">Comments</Typography>\n    //             <List>\n    //               {comments.map((comment, index) => (\n    //                 <ListItem key={index}>\n    //                   <ListItemText primary={`${comment.username}: ${comment.comment}`} />\n    //                 </ListItem>\n    //               ))}\n    //             </List>\n    //             <div className={classes.commentInputRow}>\n    //               <TextField\n    //                 label=\"Add a comment\"\n    //                 variant=\"outlined\"\n    //                 fullWidth\n    //                 value={commentInput}\n    //                 onChange={(e) => setCommentInput(e.target.value)}\n    //                 className={classes.commentInput}\n    //               />\n    //               <Button variant=\"contained\" color=\"primary\" onClick={sendComment} sx={{ padding: \"15px\" }}>\n    //                 Send\n    //               </Button>\n    //             </div>\n    //           </div>\n    //         </List>\n    //       </Drawer>\n\n    //       <Drawer\n    //         anchor=\"right\"\n    //         open={showParticipants}\n    //         onClose={toggleParticipants}\n    //         classes={{ paper: classes.drawerPaper }}\n    //       >\n    //         <Typography variant=\"h6\">Participants</Typography>\n    //         <List className={classes.drawerList}>\n    //           {participants.map((participant, index) => (\n    //             <ListItem key={index}>\n    //               <ListItemText primary={participant} />\n    //             </ListItem>\n    //           ))}\n    //         </List>\n    //       </Drawer>\n    //     </div>\n    //   )}\n\n\n    // </>\n\n\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}