{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/Voli-Chat/frontend/src/VideoChat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoChat = () => {\n  _s();\n  const [myPeer, setMyPeer] = useState(null);\n  const [stream, setStream] = useState();\n  const [peers, setPeers] = useState({});\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io('http://localhost:3000');\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      const myPeer = new SimplePeer({\n        initiator: true,\n        stream\n      });\n      myPeer.on('signal', data => {\n        socket.current.emit('offer', data, targetSocketId);\n      });\n      setMyPeer(myPeer);\n      socket.current.on('offer', (offer, targetSocketId) => {\n        const peer = new SimplePeer({\n          initiator: false,\n          stream\n        });\n        peer.on('signal', data => {\n          socket.current.emit('answer', data, targetSocketId);\n        });\n        peer.signal(offer);\n        setPeers(prevPeers => ({\n          ...prevPeers,\n          [targetSocketId]: peer\n        }));\n      });\n      socket.current.on('answer', (answer, targetSocketId) => {\n        myPeer.signal(answer);\n      });\n      socket.current.on('ice-candidate', (candidate, targetSocketId) => {\n        myPeer.signal(candidate);\n      });\n    });\n    socket.current.on('user-connected', userId => {\n      // Handle user connection\n    });\n    socket.current.on('user-disconnected', userId => {\n      // Handle user disconnection\n      if (peers[userId]) peers[userId].destroy();\n    });\n    return () => {\n      if (myPeer) myPeer.destroy();\n      socket.current.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: ref => ref ? ref.srcObject = stream : null,\n        autoPlay: true,\n        playsInline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChat, \"HD+SsjuVZaPs64dRDf36kvOtF0w=\");\n_c = VideoChat;\nexport default VideoChat;\nvar _c;\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","SimplePeer","jsxDEV","_jsxDEV","VideoChat","_s","myPeer","setMyPeer","stream","setStream","peers","setPeers","socket","current","navigator","mediaDevices","getUserMedia","video","audio","then","initiator","on","data","emit","targetSocketId","offer","peer","signal","prevPeers","answer","candidate","userId","destroy","disconnect","children","ref","srcObject","autoPlay","playsInline","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/Voli-Chat/frontend/src/VideoChat.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport SimplePeer from 'simple-peer';\n\nconst VideoChat = () => {\n  const [myPeer, setMyPeer] = useState(null);\n  const [stream, setStream] = useState();\n  const [peers, setPeers] = useState({});\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io('http://localhost:3000');\n\n    navigator.mediaDevices\n      .getUserMedia({ video: true, audio: true })\n      .then((stream) => {\n        setStream(stream);\n\n        const myPeer = new SimplePeer({ initiator: true, stream });\n\n        myPeer.on('signal', (data) => {\n          socket.current.emit('offer', data, targetSocketId);\n        });\n\n        setMyPeer(myPeer);\n\n        socket.current.on('offer', (offer, targetSocketId) => {\n          const peer = new SimplePeer({ initiator: false, stream });\n\n          peer.on('signal', (data) => {\n            socket.current.emit('answer', data, targetSocketId);\n          });\n\n          peer.signal(offer);\n\n          setPeers((prevPeers) => ({ ...prevPeers, [targetSocketId]: peer }));\n        });\n\n        socket.current.on('answer', (answer, targetSocketId) => {\n          myPeer.signal(answer);\n        });\n\n        socket.current.on('ice-candidate', (candidate, targetSocketId) => {\n          myPeer.signal(candidate);\n        });\n      });\n\n    socket.current.on('user-connected', (userId) => {\n      // Handle user connection\n    });\n\n    socket.current.on('user-disconnected', (userId) => {\n      // Handle user disconnection\n      if (peers[userId]) peers[userId].destroy();\n    });\n\n    return () => {\n      if (myPeer) myPeer.destroy();\n      socket.current.disconnect();\n    };\n  }, []);\n\n  return (\n    <div>\n      <div>\n        <video ref={(ref) => (ref ? (ref.srcObject = stream) : null)} autoPlay playsInline></video>\n      </div>\n      <div>\n        {/* Add UI elements for call controls (e.g., mute/unmute, end call) */}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}