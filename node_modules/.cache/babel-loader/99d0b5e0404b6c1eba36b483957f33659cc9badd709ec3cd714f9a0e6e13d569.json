{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/Voli-Chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [username, setUsername] = useState('');\n  const [channel, setChannel] = useState('');\n  const [channels, setChannels] = useState([]);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    setUsername('Admin');\n\n    // Fetch channels from the server when the component mounts\n    fetchChannels();\n\n    // Join a default channel for testing\n    setChannel('general');\n\n    // Fetch messages from the server for the default channel\n    fetchMessages('general');\n\n    // Listen for incoming messages from the server\n    socket.on('message', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const fetchChannels = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/channels');\n      const data = await response.json();\n      setChannels(data);\n    } catch (error) {\n      console.error('Error fetching channels:', error);\n    }\n  };\n  const fetchMessages = async selectedChannel => {\n    try {\n      const response = await fetch(`http://localhost:3001/messages?channel=${selectedChannel}`);\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = () => {\n    const newMessage = {\n      text: input,\n      timestamp: new Date(),\n      from: username,\n      channel\n    };\n    socket.emit('message', newMessage);\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput('');\n  };\n  const joinChannel = newChannel => {\n    socket.emit('join-channel', {\n      username,\n      oldChannel: channel,\n      newChannel\n    });\n    setChannel(newChannel);\n    fetchMessages(newChannel);\n  };\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channel-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Channels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), channels.map(ch => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => joinChannel(ch.name),\n          children: ch.name\n        }, ch._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [message.from, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), \" \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-timestamp\",\n            children: new Date(message.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pyXsaBa91MQ46NyRhc7uFIZsgFU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","username","setUsername","channel","setChannel","channels","setChannels","messagesEndRef","fetchChannels","fetchMessages","on","data","prevMessages","disconnect","response","fetch","json","error","console","selectedChannel","sendMessage","newMessage","text","timestamp","Date","from","emit","joinChannel","newChannel","oldChannel","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ch","onClick","name","_id","message","index","toLocaleTimeString","ref","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/Voli-Chat/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [username, setUsername] = useState('');\n  const [channel, setChannel] = useState('');\n  const [channels, setChannels] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    setUsername('Admin');\n\n    // Fetch channels from the server when the component mounts\n    fetchChannels();\n\n    // Join a default channel for testing\n    setChannel('general');\n\n    // Fetch messages from the server for the default channel\n    fetchMessages('general');\n\n    // Listen for incoming messages from the server\n    socket.on('message', (data) => {\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const fetchChannels = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/channels');\n      const data = await response.json();\n      setChannels(data);\n    } catch (error) {\n      console.error('Error fetching channels:', error);\n    }\n  };\n\n  const fetchMessages = async (selectedChannel) => {\n    try {\n      const response = await fetch(`http://localhost:3001/messages?channel=${selectedChannel}`);\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = () => {\n    const newMessage = { text: input, timestamp: new Date(), from: username, channel };\n    socket.emit('message', newMessage);\n    setMessages((prevMessages) => [...prevMessages, newMessage]);\n    setInput('');\n  };\n\n  const joinChannel = (newChannel) => {\n    socket.emit('join-channel', { username, oldChannel: channel, newChannel });\n    setChannel(newChannel);\n    fetchMessages(newChannel);\n  };\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"chat-container\">\n        <div className=\"channel-container\">\n          <h2>Channels</h2>\n          {channels.map((ch) => (\n            <button key={ch._id} onClick={() => joinChannel(ch.name)}>\n              {ch.name}\n            </button>\n          ))}\n        </div>\n        <div className=\"message-container\">\n          {messages.map((message, index) => (\n            <div key={index} className=\"message\">\n              <p className=\"message-text\">\n                <strong>{message.from}:</strong> {message.text}\n              </p>\n              <span className=\"message-timestamp\">\n                {new Date(message.timestamp).toLocaleTimeString()}\n              </span>\n            </div>\n          ))}\n          <div ref={messagesEndRef}></div>\n        </div>\n        <div className=\"input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"Type your message...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}