{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/Voli-Chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import { io } from \"socket.io-client\";\n// import { useEffect, useState } from \"react\"\n// const socket = io(\"http://localhost:3002\");\n\n// function App() {\n\n//   const [message, setMessage] = useState(\"\");\n//   const [messageRecieve, setMessageRecieve] = useState(\"\");\n//   const sendMessage = () => {\n//     socket.emit(\"send_message\", { message })\n\n//   }\n//   useEffect(() => {\n\n//     socket.on(\"recieve_message\", (data) => {\n//       setMessageRecieve(data.message)\n//     })\n//   }, [socket])\n\n//   return (\n//     <div className=\"App\">\n//       <br />\n//       <input type=\"text\" placeholder=\"Type message\" onChange={(event) => {\n//         setMessage(event.target.value)\n//       }} />\n//       <button onClick={sendMessage}> Send</button>\n//       <h1>Message:</h1>\n//       {messageRecieve}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    // Listen for incoming messages from the server\n    socket.on('message', data => {\n      setMessages([...messages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n  const sendMessage = () => {\n    // Emit a message to the server\n    socket.emit('message', {\n      text: input,\n      timestamp: new Date()\n    });\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9O8vdW2/zxnqNWKJ7NIr/2i0F2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","on","data","disconnect","sendMessage","emit","text","timestamp","Date","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/Voli-Chat/frontend/src/App.js"],"sourcesContent":["\n// import './App.css';\n// import { io } from \"socket.io-client\";\n// import { useEffect, useState } from \"react\"\n// const socket = io(\"http://localhost:3002\");\n\n// function App() {\n\n//   const [message, setMessage] = useState(\"\");\n//   const [messageRecieve, setMessageRecieve] = useState(\"\");\n//   const sendMessage = () => {\n//     socket.emit(\"send_message\", { message })\n\n//   }\n//   useEffect(() => {\n\n//     socket.on(\"recieve_message\", (data) => {\n//       setMessageRecieve(data.message)\n//     })\n//   }, [socket])\n\n//   return (\n//     <div className=\"App\">\n//       <br />\n//       <input type=\"text\" placeholder=\"Type message\" onChange={(event) => {\n//         setMessage(event.target.value)\n//       }} />\n//       <button onClick={sendMessage}> Send</button>\n//       <h1>Message:</h1>\n//       {messageRecieve}\n//     </div>\n//   );\n// }\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    // Listen for incoming messages from the server\n    socket.on('message', (data) => {\n      setMessages([...messages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n\n  const sendMessage = () => {\n    // Emit a message to the server\n    socket.emit('message', { text: input, timestamp: new Date() });\n    setInput('');\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <p key={index}>{message.text}</p>\n        ))}\n      </div>\n      <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAI,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7BJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEK,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXR,MAAM,CAACS,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAV,MAAM,CAACW,IAAI,CAAC,SAAS,EAAE;MAAEC,IAAI,EAAEP,KAAK;MAAEQ,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CAAC;IAC9DR,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACa,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;QAAAgB,QAAA,EAAgBE,OAAO,CAACL;MAAI,GAApBM,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEnB,KAAM;MAACoB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9EvB,OAAA;MAAQ6B,OAAO,EAAElB,WAAY;MAAAK,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCID,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}