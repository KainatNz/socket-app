{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/Voli-Chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { Button, Container, Grid, Paper, Typography, Slider, Switch } from '@mui/material';\nimport VideoCall from './VideoCall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:3001');\nfunction App() {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [myPeer, setMyPeer] = useState(null);\n  const [peers, setPeers] = useState([]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [targetSocketId, setTargetSocketId] = useState(null); // Added state for targetSocketId\n\n  const myVideoRef = useRef();\n  // useEffect(() => {\n  //   navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //     .then((userStream) => {\n  //       setStream(userStream);\n  //       myVideoRef.current.srcObject = userStream;\n\n  //       socket.on('your-id', (userId) => {\n  //         console.log('Your ID:', userId);\n  //         setMyPeer(new Peer({ initiator: true, trickle: false, stream: userStream }));\n  //       });\n\n  //       socket.on('user-connected', (userId) => {\n  //         console.log('User Connected:', userId);\n  //         connectToNewUser(userId, userStream);\n  //       });\n  //     });\n\n  //   return () => {\n  //     if (myPeer) myPeer.destroy();\n  //   };\n  // }, []);\n\n  const connectToNewUser = (userId, userStream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: userStream\n    });\n    setPeers(prevPeers => [...prevPeers, {\n      peerId: userId,\n      peer\n    }]);\n    peer.on('signal', data => {\n      setTargetSocketId(userId);\n      socket.emit('send-offer', {\n        signalData: data,\n        to: userId\n      });\n    });\n    peer.on('stream', stream => {\n      setPeers(prevPeers => prevPeers.map(p => p.peerId === userId ? {\n        ...p,\n        peer: {\n          ...p.peer,\n          stream\n        }\n      } : p));\n    });\n    socket.on('answer-call', data => {\n      const existingPeer = peers.find(p => p.peerId === userId);\n      if (existingPeer) {\n        existingPeer.peer.signal(data.signal);\n      }\n    });\n  };\n  const answerCall = () => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('send-answer', {\n        signalData: data,\n        to: targetSocketId\n      });\n    });\n    console.log('✌️targetSocketId --->', targetSocketId);\n    socket.on('receive-offer', data => {\n      if (data.from === targetSocketId) {\n        const existingPeer = peers.find(p => p.peerId === targetSocketId);\n        if (existingPeer) {\n          existingPeer.peer.signal(data.signal);\n        }\n      }\n    });\n    setPeers(prevPeers => [...prevPeers, {\n      peerId: targetSocketId,\n      peer\n    }]);\n  };\n  const toggleAudio = () => {\n    const audioTracks = stream.getAudioTracks();\n    audioTracks.forEach(track => track.enabled = !audioMuted);\n    setAudioMuted(!audioMuted);\n  };\n  const toggleVideo = () => {\n    const videoTracks = stream.getVideoTracks();\n    videoTracks.forEach(track => track.enabled = !videoEnabled);\n    setVideoEnabled(!videoEnabled);\n  };\n  console.log('✌️peers --->', peers);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          style: {\n            padding: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Video Chat App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoCall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6o4A6OoW2RWSxO/wr1OF3XyIaGc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","Peer","Button","Container","Grid","Paper","Typography","Slider","Switch","VideoCall","jsxDEV","_jsxDEV","socket","connect","App","_s","stream","setStream","myPeer","setMyPeer","peers","setPeers","audioMuted","setAudioMuted","videoEnabled","setVideoEnabled","targetSocketId","setTargetSocketId","myVideoRef","connectToNewUser","userId","userStream","peer","initiator","trickle","prevPeers","peerId","on","data","emit","signalData","to","map","p","existingPeer","find","signal","answerCall","console","log","from","toggleAudio","audioTracks","getAudioTracks","forEach","track","enabled","toggleVideo","videoTracks","getVideoTracks","children","container","spacing","item","xs","elevation","style","padding","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/Voli-Chat/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport io from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { Button, Container, Grid, Paper, Typography, Slider, Switch } from '@mui/material';\nimport VideoCall from './VideoCall';\nconst socket = io.connect('http://localhost:3001');\n\nfunction App() {\n  const [stream, setStream] = useState(null);\n  const [myPeer, setMyPeer] = useState(null);\n  const [peers, setPeers] = useState([]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const [videoEnabled, setVideoEnabled] = useState(true);\n  const [targetSocketId, setTargetSocketId] = useState(null); // Added state for targetSocketId\n\n  const myVideoRef = useRef();\n// useEffect(() => {\n//   navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//     .then((userStream) => {\n//       setStream(userStream);\n//       myVideoRef.current.srcObject = userStream;\n\n//       socket.on('your-id', (userId) => {\n//         console.log('Your ID:', userId);\n//         setMyPeer(new Peer({ initiator: true, trickle: false, stream: userStream }));\n//       });\n\n//       socket.on('user-connected', (userId) => {\n//         console.log('User Connected:', userId);\n//         connectToNewUser(userId, userStream);\n//       });\n//     });\n\n//   return () => {\n//     if (myPeer) myPeer.destroy();\n//   };\n// }, []);\n\n  const connectToNewUser = (userId, userStream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: userStream,\n    });\n  \n    setPeers((prevPeers) => [...prevPeers, { peerId: userId, peer }]);\n  \n    peer.on('signal', (data) => {\n      setTargetSocketId(userId);\n      socket.emit('send-offer', { signalData: data, to: userId });\n    });\n  \n    peer.on('stream', (stream) => {\n      setPeers((prevPeers) =>\n        prevPeers.map((p) =>\n          p.peerId === userId ? { ...p, peer: { ...p.peer, stream } } : p\n        )\n      );\n    });\n  \n    socket.on('answer-call', (data) => {\n      const existingPeer = peers.find((p) => p.peerId === userId);\n      if (existingPeer) {\n        existingPeer.peer.signal(data.signal);\n      }\n    });\n  };\n  \n   \n\n  const answerCall = () => {\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n  \n    peer.on('signal', (data) => {\n      socket.emit('send-answer', { signalData: data, to: targetSocketId });\n    });\nconsole.log('✌️targetSocketId --->', targetSocketId);\n    socket.on('receive-offer', (data) => {\n      if (data.from === targetSocketId) {\n        const existingPeer = peers.find((p) => p.peerId === targetSocketId);\n        if (existingPeer) {\n          existingPeer.peer.signal(data.signal);\n        }\n      }\n    });\n  \n    setPeers((prevPeers) => [...prevPeers, { peerId: targetSocketId, peer }]);\n  };\n  \n\n  const toggleAudio = () => {\n    const audioTracks = stream.getAudioTracks();\n    audioTracks.forEach((track) => (track.enabled = !audioMuted));\n    setAudioMuted(!audioMuted);\n  };\n\n  const toggleVideo = () => {\n    const videoTracks = stream.getVideoTracks();\n    videoTracks.forEach((track) => (track.enabled = !videoEnabled));\n    setVideoEnabled(!videoEnabled);\n  };\n\n  \nconsole.log('✌️peers --->', peers);\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper elevation={3} style={{ padding: '20px', textAlign: 'center' }}>\n            <Typography variant=\"h5\">Video Chat App</Typography>\n          </Paper>\n        </Grid>\n        <VideoCall/>\n        {/* <Grid item xs={12} md={8}>\n          <Paper elevation={3} style={{ padding: '20px' }}>\n            <video ref={myVideoRef} playsInline autoPlay muted />\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Paper elevation={3} style={{ padding: '20px', textAlign: 'center' }}>\n            <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n              Answer Call\n            </Button>\n            <br />\n            <br />\n            <Typography variant=\"h6\">Audio</Typography>\n            <Switch onChange={toggleAudio} checked={!audioMuted} />\n            <br />\n            <Typography variant=\"h6\">Video</Typography>\n            <Switch onChange={toggleVideo} checked={videoEnabled} />\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper elevation={3} style={{ padding: '20px' }}>\n            <Typography variant=\"h6\">Participants</Typography>\n            <Grid container spacing={2}>\n              {peers.map((peer) => (\n                <Grid item key={peer.peerId} xs={6} md={4} lg={3}>\n                  <Paper elevation={3} style={{ padding: '10px', textAlign: 'center' }}>\n                    {peer.peer.stream && (\n                      <video playsInline autoPlay ref={(ref) => ref && (ref.srcObject = peer.peer.stream)} />\n                    )}\n                  </Paper>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        </Grid> */}\n\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}