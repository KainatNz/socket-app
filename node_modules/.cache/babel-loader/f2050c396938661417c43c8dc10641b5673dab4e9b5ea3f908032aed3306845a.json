{"ast":null,"code":"var _jsxFileName = \"/home/kainat/Desktop/Voli-Chat/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    // Listen for incoming messages from the server\n    socket.on('message', data => {\n      console.log('Received message:', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    // Scroll to the bottom when new messages are received\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const sendMessage = () => {\n    // Emit a message to the server\n    const newMessage = {\n      text: input,\n      timestamp: new Date(),\n      fromMe: true\n    };\n    console.log('Sending message:', newMessage); // Log the message before sending\n    socket.emit('message', newMessage);\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.fromMe ? 'from-me' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-timestamp\",\n            children: new Date(message.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5T9mGH1XtiC467pqOMuWw2291HM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","messagesEndRef","on","data","console","log","prevMessages","disconnect","current","scrollIntoView","behavior","sendMessage","newMessage","text","timestamp","Date","fromMe","emit","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","ref","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/kainat/Desktop/Voli-Chat/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    // Listen for incoming messages from the server\n    socket.on('message', (data) => {\n      console.log('Received message:', data);\n      setMessages((prevMessages) => [...prevMessages, data]);\n    });\n\n    // Clean up the socket connection when the component unmounts\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    // Scroll to the bottom when new messages are received\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const sendMessage = () => {\n    // Emit a message to the server\n    const newMessage = { text: input, timestamp: new Date(), fromMe: true };\n    console.log('Sending message:', newMessage); // Log the message before sending\n    socket.emit('message', newMessage);\n\n    setMessages((prevMessages) => [...prevMessages, newMessage]);\n    setInput('');\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"chat-container\">\n        <div className=\"message-container\">\n          {messages.map((message, index) => (\n            <div key={index} className={`message ${message.fromMe ? 'from-me' : ''}`}>\n              <p className=\"message-text\">{message.text}</p>\n              <span className=\"message-timestamp\">{new Date(message.timestamp).toLocaleTimeString()}</span>\n            </div>\n          ))}\n          <div ref={messagesEndRef}></div>\n        </div>\n        <div className=\"input-container\">\n          <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}